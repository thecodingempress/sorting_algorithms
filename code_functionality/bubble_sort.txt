void swap_ints(int *a, int *b)

1. The function swap_ints() takes two integers as arguments and swaps their values.
2. The function uses a temporary variable to store the value of the first argument.
3. The function then assigns the value of the second argument to the first argument.
4. The function then assigns the value of the temporary variable to the second argument.

void bubble_sort(int *array, size_t size)

1. The function takes two arguments: an array of integers and the size of the array.
2. The function checks to make sure the array is not NULL and that the size is greater than 1.
3. The function initializes a variable named bubbly to false.
4. The function initializes a variable named len to the size of the array.
5. The function enters a while loop that will run as long as bubbly is false.
6. The function enters a for loop that will run as long as i is less than len - 1.
7. The function checks to see if the value at array[i] is greater than the value at array[i + 1].
8. If the value at array[i] is greater than the value at array[i + 1],
    the function swaps the values at array[i] and array[i + 1].
9. The function prints the array.
10. The function sets bubbly to false.
11. The function decrements len by 1.
12. The function exits the while loop.
13. The function returns.

print array function

1. The function takes two parameters: an array of integers and the size of the array.
2. The function prints the array elements, separated by commas.
3. The function returns nothing.
